"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseCss = void 0;
const sass_1 = __importDefault(require("sass"));
const options_1 = require("./options");
const parseCss = (log, file, fileName, config) => {
    const options = (0, options_1.getPreprocessorOptions)(config);
    const finalImporters = [];
    if (options.importer) {
        Array.isArray(options.importer)
            ? finalImporters.push(...options.importer)
            : finalImporters.push(options.importer);
    }
    log(`getData(file, fileName, options.additionalData): ${getData(file, fileName, options.additionalData)}`);
    log(`finalImporter:${finalImporters}`);
    const result = sass_1.default.renderSync({
        ...options,
        data: getData(file, fileName, options.additionalData),
        file: fileName,
        includePaths: options.includePaths,
        importer: finalImporters,
    });
    log(`result.css.toString(): ${result.css.toString()}`);
    return result.css.toString();
};
exports.parseCss = parseCss;
const getData = (data, filename, additionalData) => {
    if (!additionalData)
        return `\n${data}`;
    if (typeof additionalData === "function") {
        return additionalData(`\n${data}`, filename);
    }
    return `${additionalData}\n${data}`;
};
